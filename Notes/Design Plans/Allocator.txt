Standard allocator which meets c++20 requirements.

See design lessons for why this is incompletes

--- BEGIN ---

template<typename T>
class Allocator {
public:

	static_assert(!STD is_volatile_v<T>, "volatile type is ill-formed");
	static_assert(!STD is_const_v<T>, "const type is ill-formed");

	using value_type = T;
	using size_type = STD size_t;
	using difference_type = STD ptrdiff_t;

	Allocator();

	T* allocate(size_type);
	void deallocate(T*, size_type);

};